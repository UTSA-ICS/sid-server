[tox]
minversion = 1.6
skipsdist = True
envlist = py27,py33,py34,pep8,docs,sample_config

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = bash tools/pretty_tox.sh '{posargs}'
whitelist_externals = bash

[testenv:py33]
deps = -r{toxinidir}/requirements-py3.txt
       -r{toxinidir}/test-requirements-py3.txt
       nose
commands =
  nosetests --with-coverage --cover-package=sidserver \
      --exclude test_ldap \
      sidserver/tests/test_auth_plugin.py \
      sidserver/tests/test_backend.py \
      sidserver/tests/test_backend_rules.py \
      sidserver/tests/test_cache_backend_mongo.py \
      sidserver/tests/test_driver_hints.py \
      sidserver/tests/test_hacking_checks.py \
      sidserver/tests/test_injection.py \
      sidserver/tests/test_matchers.py \
      sidserver/tests/test_policy.py \
      sidserver/tests/test_singular_plural.py \
      sidserver/tests/test_sizelimit.py \
      sidserver/tests/test_sql_migrate_extensions.py \
      sidserver/tests/test_token_bind.py \
      sidserver/tests/test_url_middleware.py \
      sidserver/tests/unit/common/test_utils.py \
      sidserver/tests/test_validation.py \
      sidserver/tests/test_v3_controller.py \
      sidserver/tests/test_wsgi.py \
      sidserver/tests/unit

[testenv:py34]
deps = -r{toxinidir}/requirements-py3.txt
       -r{toxinidir}/test-requirements-py3.txt
       nose
commands =
  nosetests --with-coverage --cover-package=sidserver \
      --exclude test_ldap \
      sidserver/tests/test_auth_plugin.py \
      sidserver/tests/test_backend.py \
      sidserver/tests/test_backend_rules.py \
      sidserver/tests/test_cache_backend_mongo.py \
      sidserver/tests/test_driver_hints.py \
      sidserver/tests/test_hacking_checks.py \
      sidserver/tests/test_injection.py \
      sidserver/tests/test_matchers.py \
      sidserver/tests/test_policy.py \
      sidserver/tests/test_singular_plural.py \
      sidserver/tests/test_sizelimit.py \
      sidserver/tests/test_sql_migrate_extensions.py \
      sidserver/tests/test_token_bind.py \
      sidserver/tests/test_url_middleware.py \
      sidserver/tests/unit/common/test_utils.py \
      sidserver/tests/test_validation.py \
      sidserver/tests/test_v3_controller.py \
      sidserver/tests/test_wsgi.py \
      sidserver/tests/unit

[testenv:pep8]
commands =
  flake8 {posargs}
  # Run bash8 during pep8 runs to ensure violations are caught by
  # the check and gate queues
  bashate run_tests.sh examples/pki/gen_pki.sh
  # Check that .po and .pot files are valid.
  bash -c "find sidserver -type f -regex '.*\.pot?' -print0| \
           xargs -0 -n 1 msgfmt --check-format -o /dev/null"

[tox:jenkins]
downloadcache = ~/cache/pip

[testenv:cover]
commands = python setup.py testr --coverage --testr-args='{posargs}'

[testenv:venv]
commands = {posargs}

[testenv:debug]
commands = oslo_debug_helper {posargs}

[flake8]
filename= *.py,sidserver-all,sidserver-manage
show-source = true

# H405  multi line docstring summary not separated with an empty line
ignore = H405

exclude=.venv,.git,.tox,build,dist,doc,*openstack/common*,*lib/python*,*egg,tools,vendor,.update-venv,*.ini,*.po,*.pot
max-complexity=24

[testenv:docs]
commands=
    python setup.py build_sphinx

[testenv:sample_config]
commands = oslo-config-generator --config-file=config-generator/sidserver.conf

[hacking]
import_exceptions =
  sidserver.i18n
local-check-factory = sidserver.hacking.checks.factory
